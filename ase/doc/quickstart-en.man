.title ASE Quick Start Guide

= ASE Quck Start Guide =

The first step in using this library is to build it as the pre-compiled binary is not available at this moment. This document shows how to build the core library on various operating systems.

== Unix/Linux ==

You may run the [[configure]] script on most of the Unix-like operation systems to set up the build environment and then run the [[make]] utility at the top-level directory.

{{{
$ ./configure
$ make 
}}}

The [[make]] utility visits each core module directory and build the library there. The [[test]] directory and its subdirectories are not built by default. 

If you have preference for a particular compiler and the flags, you may explicitly specify them when you run the [[configure]] script. Here are presented a few such examples.

{{{
# HP-UX B.11.23 with HP ANSI C 
CC=cc CFLAGS="-O2 +DD64" LDFLAGS="+DD64" ./configure # 64-bit
CC=cc CFLAGS="-O2 +DD32" LDFLAGS="+DD32" ./configure # 32-bit

# SCO OpenServer Release 5.0.7 (SCO_SV 3.2 5.0.7) with SCO OpenServer Development System
CC=cc CFLAGS="-Xc -a ansi -O2" ./configure

# Solaris 10 with GCC
CC=gcc CFLAGS="-Wall -O2 -m64" LDFLAGS="-m64" ./configure # 64-bit
CC=gcc CFLAGS="-Wall -O2" ./configure # 32-bit
}}}

== OpenVMS ==

You may use the [[mms]] command or the [[mmk]] command to build the library. No counterpart for the [[configure]] script is provided. As not top-level build script is provided, you have to run the command in each directory that you want to build the library in.

Let's build the AWK library and its test program, for instance.

{{{
set default [.ase.cmn]
mms
set default [-.awk]
mms
set default [-.utl]
mms
set default [-.test.awk]
mms
}}}

For those who are not familar with OpenVMS, here is one of the ways how to run the test program.

{{{
; define the foreign command.
aseawk :== $DISK$GEIN_SYS:[USERS.BACON.ASE.TEST.AWK]aseawk.exe
; run the command.
aseawk -f hello.awk
}}}

== MS-Windows ==

You may use the Visual Studio 6 or later to use the provided project file. Otherwise open the command-line build environment and use the [[make]] utility.

A set of make scripts is provided to support the Microsoft build environement and the Borland build environment. The script for the Miscrosoft build environment is named [[makefile.msw.cl]] while it is [[makefile.msw.bcc]] for the Borland counterpart.

If you are building the AWK library and the test program, this is probably what you have to do.

{{{
cd ase\cmn
nmake /f makefile.msw.cl
cd ..\awk
nmake /f makefile.msw.cl
cd ..\utl
nmake /f makefile.msw.cl
cd ..\test\awk
nmake /f makefile.msw.cl
}}}

However, The COM module can only be built within the Visual Studio environment. After having built the COM module, you may open [[ase/test/com/ase.vbp]] for testing.

== JNI Interface ==

Some make scripts contain the target to build the JNI interface for Java. The Java class files can be built with the standard [[javac]] command.
